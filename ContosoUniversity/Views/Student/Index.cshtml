@model IEnumerable<ContosoUniversity.Models.Student>
@using X.PagedList.Mvc.Core;
@using X.PagedList;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewData["Title"] = "Students";
    bool isArchive = ViewBag.IsArchive == true ? true : false;
    Student emptyStudent = new Student(); // for headers

    var minDate = ViewBag.QueryMinDateParam != null? ((DateTime)ViewBag.QueryMinDateParam).ToString("yyyy-MM-dd"):null;
    var maxDate = ViewBag.QueryMaxDateParam != null? ((DateTime)ViewBag.QueryMaxDateParam).ToString("yyyy-MM-dd"):null;

    object sortToName = new
    {
        page = ViewBag.CurrentPage,
        sortOrder = ViewBag.NameSortParam,
        q = ViewBag.QueryParam,
        minDate,
        maxDate
    };
    object sortToDate = new
    {
		page = ViewBag.CurrentPage,
        sortOrder = ViewBag.DateSortParam,
        q = ViewBag.QueryParam,
        minDate,
        maxDate
    };
}

<div class="d-flex" style="width: 100%;">
	<h1>Students</h1>
	<div class="d-flex gap-2 align-items-center" style="margin-left: auto;">
		@if (isArchive == false)
		{
			<a asp-action="Create" class="btn btn-primary">Create New</a>
			<a asp-action="Archive" class="btn btn-outline-danger"> Archive </a>
		}
	</div>
</div>
@using (Html.BeginForm((string)ViewBag.LinkTo, "Student", FormMethod.Get))
{
	@Html.Hidden("page", ViewBag.CurrentPage, new {})
	@Html.Hidden("sortOrder", ViewBag.NameSortParam, new {})
    <div class="d-flex gap-2 align-items-center">
        <label class="form-label" for="q">Filter:</label>
        @Html.TextBox("q", ViewBag.QueryParam as string, new { @class = "form-control", @style = "max-width: 200px;", @placeholder="Filter name" })  

        <input type="date" name="minDate" class="form-control" value="@(minDate)" style="max-width: 200px" />
        <span>-</span>
        <input type="date" name="maxDate" class="form-control" value="@(maxDate)" style="max-width: 200px" />

        <input type="submit" value="Search" class="btn btn-primary" />
		@Html.ActionLink("Clear", (string)ViewBag.LinkTo, new {}, new { @class="btn btn-outline-secondary"})
    </div>
}

<table class="table table-bordered table-striped table-hover mt-2">
        <tr>
            <th>
                @Html.ActionLink($"{Html.DisplayNameFor(_ => emptyStudent.LastName)} {ViewBag.NameSortSuffix}", (string)ViewBag.LinkTo, sortToName, new { @class="text-decoration-none text-black"})
            </th>
            <th class="text-black">
                @Html.DisplayNameFor(_ => emptyStudent.FirstMidName)
            </th>
            <th class="text-black">
                @Html.DisplayNameFor(_ => emptyStudent.FullName)
            </th>
            <th>
                @Html.ActionLink($"{Html.DisplayNameFor(_ => emptyStudent.EnrollmentDate)} {ViewBag.DateSortSuffix}", (string)ViewBag.LinkTo, sortToDate, new { @class="text-decoration-none text-black"})
            </th>
            <th class="text-black text-center">
                Actions
            </th>
        </tr>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstMidName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EnrollmentDate)
            </td>
            <td>
                @if (isArchive == false)
                {
                    <div class="d-flex gap-1 justify-content-center">
					<a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-secondary d-flex align-content-center justify-content-center" role="button">
                       <img src="~/static/pen-solid-full.svg" style="width: 18px; height: 18px;" />
					</a>
					<a asp-action="Details" asp-route-id="@item.Id" class="btn btn-secondary d-flex align-content-center justify-content-center" role="button">
                       <img src="~/static/file-solid-full.svg" style="width: 18px; height: 18px;" />
					</a>
					<a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger d-flex align-content-center justify-content-center" role="button">
                       <img src="~/static/trash-solid-full.svg" style="width: 18px; height: 18px;" />
				   </a>
					</div>
                }
                else
                {
                    <div class="d-flex gap-1 justify-content-center">
						<a asp-action="Restore" asp-route-id="@item.Id" class="btn btn-success">Restore</a>
                    </div>
                }
            </td>
        </tr>
}
</table>
<br />
@Html.PagedListPager(
    (IPagedList) Model,
    page => Url.Action((string)ViewBag.LinkTo, new {
        page,
        sortOrder = ViewBag.CurrentSortParam,
        q = ViewBag.QueryParam,
        minDate,
        maxDate
    }),
    new PagedListRenderOptions {
		UlElementClasses = new [] { "pagination" },
		LiElementClasses = new [] { "page-item" },
		ActiveLiElementClass = "text-black",
        PageClasses = new [] { "page-link" },
		PreviousElementClass = "",
		NextElementClass = "",
    }
)
